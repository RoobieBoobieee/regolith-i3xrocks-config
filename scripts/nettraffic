#!/bin/sh

VALUE_COLOR=${color:-$(xrescat i3xrocks.value.color "#D8DEE9")}
LABEL_COLOR=${label_color:-$(xrescat i3xrocks.label.color "#7B8394")}

VALUE_FONT=${font:-$(xrescat i3xrocks.value.font "Source Code Pro Medium 13")}

GET="cat /proc/net/dev"
UPL=${label_icon:-$(xrescat i3xrocks.label.up ▴)}
DNL=${label_icon:-$(xrescat i3xrocks.label.dn ▾)}
ULEV=2

IF=$(ip route get 1.1.1.1 | grep -Po '(?<=dev\s)\w+' | cut -f1 -d ' ')
IF="${BLOCK_INSTANCE:-${IF}}"

[ "$IF" = "" ] && exit

case "$IF" in
e*) NIC=${label_icon:-$(xrescat i3xrocks.label.wired )} ;;
w*) NIC=${label_icon:-$(xrescat i3xrocks.label.wifi )} ;;
esac

while getopts i:a:u:e:t:U:D:hv option; do
  case "${option}" in

  i)
    IF=${OPTARG}
    ;;
  u)
    UNIT=${OPTARG}
    ;;
  e)
    ULEV=${OPTARG}
    ;;
  t)
    DLY=${OPTARG}
    ;;
  h)
    echo -e "Usage: nettraffic [OPTION]"
    echo -e "Options:"
    echo -e "  -i  (%ifname%)\t Specify which network interface to monitor. Required."
    echo -e "  -u  (K|KB|M|MB)\t Units to show the data in. Automatic if not specified."
    echo -e "  -e  (0|1|2|3|4)\t Level of units displayed. (0 for none, 1 for K, 2 for KB, 3 for K/s,"
    echo -e "    \t\t\t 4 for KB/s). Default if 4."
    echo -e "  -t  (%integer%)\t Set the interval for the data update. Default is 1."
    echo -e "  -v\t\t\t Prints version number."
    echo -e "  -h\t\t\t Prints this help."
    echo "For full help, visit http://github.com/ma-santoso/nettrafic/"
    exit
    ;;
  v)
    echo "$NAME, version $VERSION"
    exit
    ;;
  *)
    exit
    ;;
  esac
done

if [ "$UPL" = "" ]; then
  UP=" up"
else
  UP=$UPL
fi
if [ "$DNL" = "" ]; then
  DN=" dn"
else
  DN=$DNL
fi

if [ "$UNIT" = "MB" -o "$UNIT" = "M" ]; then
  FAC=1048576
  case "$ULEV" in

  0) SUF="" ;;
  1) SUF="M" ;;
  2) SUF="MB" ;;
  3) SUF="M/s" ;;
  *) SUF="MB/s" ;;
  esac
elif [ "$UNIT" = "KB" -o "$UNIT" = "K" ]; then
  FAC=1024
  case "$ULEV" in

  0) SUF="" ;;
  1) SUF="K" ;;
  2) SUF="KB" ;;
  3) SUF="K/s" ;;
  *) SUF="KB/s" ;;
  esac
elif [ "$UNIT" = "B" -o "$UNIT" = "" ]; then
  FAC=1
  case "$ULEV" in

  0) SUF="" ;;
  1) SUF="B" ;;
  2) SUF="B" ;;
  *) SUF="B/s" ;;
  esac
fi

if [ "$DLY" = "" ]; then
  DLY=1
fi

RN="00.0"
TN="00.0"
AN="00.0"

RX1=$($GET | grep $IF | awk '{print $2}')
TX1=$($GET | grep $IF | awk '{print $10}')
sleep $DLY
RX2=$($GET | grep $IF | awk '{print $2}')
TX2=$($GET | grep $IF | awk '{print $10}')

RX=$(echo "scale = 0; ($RX2-$RX1)/$DLY" | bc -l)
TX=$(echo "scale = 0; ($TX2-$TX1)/$DLY" | bc -l)
AX=$(echo "scale = 0; $RX+$TX" | bc -l)

if [ "$UNIT" = "" ]; then
  if [ "$RX" -ge 102400 -o "$TX" -ge 102400 ]; then
    FAC=1048576
    case "$ULEV" in

    0) SUF="" ;;
    1) SUF=" M" ;;
    2) SUF="MB" ;;
    3) SUF="M/s" ;;
    *) SUF="MB/s" ;;
    esac
  elif [ "$RX" -ge 100 -o "$TX" -ge 100 ]; then
    FAC=1024
    case "$ULEV" in

    0) SUF="" ;;
    1) SUF=" K" ;;
    2) SUF="KB" ;;
    3) SUF="K/s" ;;
    *) SUF="KB/s" ;;
    esac
  else
    FAC=1
    case "$ULEV" in

    0) SUF="" ;;
    1) SUF=" B" ;;
    2) SUF=" B" ;;
    *) SUF="B/s" ;;
    esac
  fi
fi

RN=$(echo $RX/$FAC | bc -l | awk '{ printf("%04.1f", $1)}')
TN=$(echo $TX/$FAC | bc -l | awk '{ printf("%04.1f", $1)}')
AN=$(echo $AX/$FAC | bc -l | awk '{ printf("%04.1f", $1)}')

echo "<span font_desc=\"${LABEL_FONT}\" color=\"${LABEL_COLOR}\">${NIC}</span><span font_desc=\"${VALUE_FONT}\" color=\"${VALUE_COLOR}\"> $RN $SUF</span><span font_desc=\"${LABEL_FONT}\" color=\"${LABEL_COLOR}\">${DN}</span><span font_desc=\"${VALUE_FONT}\" color=\"${VALUE_COLOR}\"> $TN $SUF</span><span font_desc=\"${LABEL_FONT}\" color=\"${LABEL_COLOR}\">${UP}</span>"

